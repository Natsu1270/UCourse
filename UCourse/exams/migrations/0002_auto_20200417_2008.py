# Generated by Django 3.0.3 on 2020-04-17 13:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('questions', '0006_auto_20200410_1100'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0015_course_fee_type'),
        ('exams', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbilityTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('duration', models.IntegerField()),
                ('status', models.BooleanField(default=True)),
                ('num_questions', models.IntegerField(blank=True, default=10, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('course', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ability_test', to='courses.Course')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ability_creator', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAbilityTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_taken', models.DateTimeField(default=django.utils.timezone.now)),
                ('result', models.IntegerField(blank=True, null=True)),
                ('ability_test', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ability_user_test', to='exams.AbilityTest')),
                ('questions', models.ManyToManyField(related_name='ability_questions', to='questions.Question')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_ability_test', to=settings.AUTH_USER_MODEL)),
                ('user_responses', models.ManyToManyField(related_name='responses_users', to='questions.Choice')),
            ],
        ),
        migrations.CreateModel(
            name='UserResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_res', to='questions.Choice')),
                ('user_ability_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_r', to='exams.UserAbilityTest')),
            ],
        ),
        migrations.DeleteModel(
            name='Answer',
        ),
        migrations.DeleteModel(
            name='Question',
        ),
        migrations.AddField(
            model_name='exam',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exam_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='exam',
            name='modified_by',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exam_modifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='exam',
            name='questions',
            field=models.ManyToManyField(related_name='question_exams', to='questions.Question'),
        ),
        migrations.AlterField(
            model_name='exam',
            name='exam_type',
            field=models.CharField(choices=[('lt', 'Regular Lesson Test'), ('mc', 'Middle Course Test'), ('fc', 'Final Course Test')], max_length=2),
        ),
        migrations.AddField(
            model_name='abilitytest',
            name='taken_users',
            field=models.ManyToManyField(related_name='ability_tests', through='exams.UserAbilityTest', to=settings.AUTH_USER_MODEL),
        ),
    ]
